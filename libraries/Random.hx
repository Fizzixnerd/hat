module Random
(Var "getStdGen",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "getStdRandom",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "mkStdGen",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "newStdGen",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "setStdGen",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "RandomGen" "genRange",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "RandomGen" "next",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "random",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "randomIO",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "randomR",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "randomRIO",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "randomRs",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "Random" "randoms",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(Method "RandomGen" "split",Value {args = -1, fixity = Def, priority = 9, letBound = True, traced = False})
(TypeClass "StdGen",TyCls (Ty [] []))
(TypeClass "Random",TyCls (Cls ["random","randomIO","randomR","randomRIO","randomRs","randoms"]))
(TypeClass "RandomGen",TyCls (Cls ["genRange","next","split"]))
