module List
(Var "!!",Value {args = 2, fixity = L, priority = 9, letBound = True, traced = False})
(Var "++",Value {args = 2, fixity = R, priority = 5, letBound = True, traced = False})
(Var "\\\\",Value {args = 0, fixity = None, priority = 5, letBound = True, traced = False})
(Var "all",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "and",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "any",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "break",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "concat",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "concatMap",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "cycle",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "delete",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "deleteBy",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "deleteFirstsBy",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "drop",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "dropWhile",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "elem",Value {args = 1, fixity = None, priority = 4, letBound = True, traced = False})
(Var "elemIndex",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "elemIndices",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "filter",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "find",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "findIndex",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "findIndices",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "foldl",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "foldl1",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "foldr",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "foldr1",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericDrop",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericIndex",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericLength",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericReplicate",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericSplitAt",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "genericTake",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "group",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "groupBy",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "head",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "init",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "inits",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "insert",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "insertBy",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "intersect",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "intersectBy",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "intersperse",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "isPrefixOf",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "isSuffixOf",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "iterate",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "last",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "length",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "lines",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "lookup",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "map",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "mapAccumL",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "mapAccumR",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "maximum",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "maximumBy",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "minimum",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "minimumBy",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "notElem",Value {args = 1, fixity = None, priority = 4, letBound = True, traced = False})
(Var "nub",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "nubBy",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "null",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "or",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "partition",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "product",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "repeat",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "replicate",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "reverse",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "scanl",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "scanl1",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "scanr",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "scanr1",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "sort",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "sortBy",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "span",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "splitAt",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "sum",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "tail",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "tails",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "take",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "takeWhile",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "transpose",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unfoldr",Value {args = 2, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "union",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unionBy",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unlines",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unwords",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip3",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip4",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip5",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip6",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "unzip7",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "words",Value {args = 1, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip3",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip4",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip5",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip6",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zip7",Value {args = 0, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith",Value {args = 3, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith3",Value {args = 4, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith4",Value {args = 5, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith5",Value {args = 6, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith6",Value {args = 7, fixity = Def, priority = 9, letBound = True, traced = False})
(Var "zipWith7",Value {args = 8, fixity = Def, priority = 9, letBound = True, traced = False})
